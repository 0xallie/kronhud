plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "maven-publish"
    id "io.freefair.lombok" version "6.1.0-m2"
    id "com.modrinth.minotaur" version "2.+"
    id 'net.darkhax.curseforgegradle' version '1.0.11'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

Properties additionalProperties = new Properties()
if (file("extra.properties").exists()) {
    additionalProperties.load(file("extra.properties").newReader())
}


repositories {
    maven { url "https://masa.dy.fi/maven" }
    maven { url "https://maven.terraformersmc.com/releases" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    modImplementation "fi.dy.masa.malilib:malilib-fabric-1.19.0:${project.malilib_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
    repositories {

    }
}

modrinth {
    if (additionalProperties["modrinth_token"] != null) {
        token = additionalProperties["modrinth_token"]
    } else if (System.getenv("modrinth_token") != null) {
        token = System.getenv("modrinth_token")
    } else {
        System.out.println("No token found...")
        return
    }
    projectId = "kronhud"
    versionNumber = version
    versionName = "KronHUD-${version}"
    versionType = "release"
    uploadFile = remapJar
    gameVersions = [project.minecraft_version]
    loaders = ["fabric", "quilt"]
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    if (additionalProperties["curseforge_token"] != null) {
        apiToken = additionalProperties["curseforge_token"]
    } else if (System.getenv("curseforge_token") != null) {
        apiToken = System.getenv("curseforge_token")
    } else {
        System.out.println("No token found...")
        return
    }

    def mainFile = upload(project.curseforge_id, remapJar)
    mainFile.releaseType = 'release'
    mainFile.displayName = "${archivesBaseName}-${project.version}"
    mainFile.changelog = ""
    mainFile.addRequirement('MaLiLib')
    mainFile.addGameVersion(project.minecraft_version)
    mainFile.addModLoader('Fabric')
    mainFile.addModLoader('Quilt')
    mainFile.addJavaVersion('Java 17')
    mainFile.addJavaVersion('Java 18')
}

task publishThirdParty {
    dependsOn 'publishCurseForge'
    dependsOn 'modrinth'
}